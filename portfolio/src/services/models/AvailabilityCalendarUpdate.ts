/* tslint:disable */
/* eslint-disable */
/**
 * Project Manager ( Portfolio )
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AvailabilityCalendarUpdate
 */
export interface AvailabilityCalendarUpdate {
    /**
     * 
     * @type {string}
     * @memberof AvailabilityCalendarUpdate
     */
    userId: string | null;
    /**
     * 
     * @type {Date}
     * @memberof AvailabilityCalendarUpdate
     */
    startDate: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof AvailabilityCalendarUpdate
     */
    endDate: Date | null;
    /**
     * 
     * @type {string}
     * @memberof AvailabilityCalendarUpdate
     */
    status: string | null;
    /**
     * 
     * @type {string}
     * @memberof AvailabilityCalendarUpdate
     */
    note: string | null;
}

/**
 * Check if a given object implements the AvailabilityCalendarUpdate interface.
 */
export function instanceOfAvailabilityCalendarUpdate(value: object): value is AvailabilityCalendarUpdate {
    if (!('userId' in value) || value['userId'] === undefined) return false;
    if (!('startDate' in value) || value['startDate'] === undefined) return false;
    if (!('endDate' in value) || value['endDate'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('note' in value) || value['note'] === undefined) return false;
    return true;
}

export function AvailabilityCalendarUpdateFromJSON(json: any): AvailabilityCalendarUpdate {
    return AvailabilityCalendarUpdateFromJSONTyped(json, false);
}

export function AvailabilityCalendarUpdateFromJSONTyped(json: any, ignoreDiscriminator: boolean): AvailabilityCalendarUpdate {
    if (json == null) {
        return json;
    }
    return {
        
        'userId': json['user_id'],
        'startDate': (json['start_date'] == null ? null : new Date(json['start_date'])),
        'endDate': (json['end_date'] == null ? null : new Date(json['end_date'])),
        'status': json['status'],
        'note': json['note'],
    };
}

export function AvailabilityCalendarUpdateToJSON(value?: AvailabilityCalendarUpdate | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'user_id': value['userId'],
        'start_date': (value['startDate'] == null ? null : (value['startDate'] as any).toISOString().substring(0,10)),
        'end_date': (value['endDate'] == null ? null : (value['endDate'] as any).toISOString().substring(0,10)),
        'status': value['status'],
        'note': value['note'],
    };
}

