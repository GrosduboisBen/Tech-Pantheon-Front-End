/* tslint:disable */
/* eslint-disable */
/**
 * Project Manager ( Portfolio )
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserResponse
 */
export interface UserResponse {
    /**
     * 
     * @type {string}
     * @memberof UserResponse
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof UserResponse
     */
    email: string;
    /**
     * 
     * @type {string}
     * @memberof UserResponse
     */
    id: string;
    /**
     * 
     * @type {Date}
     * @memberof UserResponse
     */
    creationDate: Date;
    /**
     * 
     * @type {Date}
     * @memberof UserResponse
     */
    lastLoginDate: Date | null;
    /**
     * 
     * @type {boolean}
     * @memberof UserResponse
     */
    active: boolean;
    /**
     * 
     * @type {string}
     * @memberof UserResponse
     */
    roleId: string | null;
}

/**
 * Check if a given object implements the UserResponse interface.
 */
export function instanceOfUserResponse(value: object): value is UserResponse {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('email' in value) || value['email'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('creationDate' in value) || value['creationDate'] === undefined) return false;
    if (!('lastLoginDate' in value) || value['lastLoginDate'] === undefined) return false;
    if (!('active' in value) || value['active'] === undefined) return false;
    if (!('roleId' in value) || value['roleId'] === undefined) return false;
    return true;
}

export function UserResponseFromJSON(json: any): UserResponse {
    return UserResponseFromJSONTyped(json, false);
}

export function UserResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'email': json['email'],
        'id': json['id'],
        'creationDate': (new Date(json['creation_date'])),
        'lastLoginDate': (json['last_login_date'] == null ? null : new Date(json['last_login_date'])),
        'active': json['active'],
        'roleId': json['role_id'],
    };
}

export function UserResponseToJSON(value?: UserResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'name': value['name'],
        'email': value['email'],
        'id': value['id'],
        'creation_date': ((value['creationDate']).toISOString()),
        'last_login_date': (value['lastLoginDate'] == null ? null : (value['lastLoginDate'] as any).toISOString()),
        'active': value['active'],
        'role_id': value['roleId'],
    };
}

