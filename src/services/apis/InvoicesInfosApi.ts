// tslint:disable
/**
 * Project Manager ( Portfolio )
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Observable } from 'rxjs';
import type { AjaxResponse } from 'rxjs/ajax';
import { BaseAPI, throwIfNullOrUndefined, encodeURI } from '../runtime';
import type { OperationOpts, HttpHeaders } from '../runtime';
import type {
    HTTPValidationError,
    InvoiceInfoCreate,
    InvoiceInfoResponse,
    InvoiceInfoUpdate,
} from '../models';

export interface CreateApiInvoicesInfosPostRequest {
    invoiceInfoCreate: InvoiceInfoCreate;
}

export interface DeleteApiInvoicesInfosInfoIdDeleteRequest {
    infoId: string;
}

export interface ReadApiInvoicesInfosInfoIdGetRequest {
    infoId: string;
}

export interface UpdateApiInvoicesInfosInfoIdPutRequest {
    infoId: string;
    invoiceInfoUpdate: InvoiceInfoUpdate;
}

/**
 * no description
 */
export class InvoicesInfosApi extends BaseAPI {

    /**
     * Create a new invoice info.
     * Create
     */
    createApiInvoicesInfosPost({ invoiceInfoCreate }: CreateApiInvoicesInfosPostRequest): Observable<InvoiceInfoResponse>
    createApiInvoicesInfosPost({ invoiceInfoCreate }: CreateApiInvoicesInfosPostRequest, opts?: OperationOpts): Observable<AjaxResponse<InvoiceInfoResponse>>
    createApiInvoicesInfosPost({ invoiceInfoCreate }: CreateApiInvoicesInfosPostRequest, opts?: OperationOpts): Observable<InvoiceInfoResponse | AjaxResponse<InvoiceInfoResponse>> {
        throwIfNullOrUndefined(invoiceInfoCreate, 'invoiceInfoCreate', 'createApiInvoicesInfosPost');

        const headers: HttpHeaders = {
            'Content-Type': 'application/json',
        };

        return this.request<InvoiceInfoResponse>({
            url: '/api/invoices_infos/',
            method: 'POST',
            headers,
            body: invoiceInfoCreate,
        }, opts?.responseOpts);
    };

    /**
     * Delete invoice info by ID.
     * Delete
     */
    deleteApiInvoicesInfosInfoIdDelete({ infoId }: DeleteApiInvoicesInfosInfoIdDeleteRequest): Observable<any>
    deleteApiInvoicesInfosInfoIdDelete({ infoId }: DeleteApiInvoicesInfosInfoIdDeleteRequest, opts?: OperationOpts): Observable<AjaxResponse<any>>
    deleteApiInvoicesInfosInfoIdDelete({ infoId }: DeleteApiInvoicesInfosInfoIdDeleteRequest, opts?: OperationOpts): Observable<any | AjaxResponse<any>> {
        throwIfNullOrUndefined(infoId, 'infoId', 'deleteApiInvoicesInfosInfoIdDelete');

        return this.request<any>({
            url: '/api/invoices_infos/{info_id}'.replace('{info_id}', encodeURI(infoId)),
            method: 'DELETE',
        }, opts?.responseOpts);
    };

    /**
     * Retrieve invoice info by ID.
     * Read
     */
    readApiInvoicesInfosInfoIdGet({ infoId }: ReadApiInvoicesInfosInfoIdGetRequest): Observable<InvoiceInfoResponse>
    readApiInvoicesInfosInfoIdGet({ infoId }: ReadApiInvoicesInfosInfoIdGetRequest, opts?: OperationOpts): Observable<AjaxResponse<InvoiceInfoResponse>>
    readApiInvoicesInfosInfoIdGet({ infoId }: ReadApiInvoicesInfosInfoIdGetRequest, opts?: OperationOpts): Observable<InvoiceInfoResponse | AjaxResponse<InvoiceInfoResponse>> {
        throwIfNullOrUndefined(infoId, 'infoId', 'readApiInvoicesInfosInfoIdGet');

        return this.request<InvoiceInfoResponse>({
            url: '/api/invoices_infos/{info_id}'.replace('{info_id}', encodeURI(infoId)),
            method: 'GET',
        }, opts?.responseOpts);
    };

    /**
     * Update invoice info by ID.
     * Update
     */
    updateApiInvoicesInfosInfoIdPut({ infoId, invoiceInfoUpdate }: UpdateApiInvoicesInfosInfoIdPutRequest): Observable<InvoiceInfoResponse>
    updateApiInvoicesInfosInfoIdPut({ infoId, invoiceInfoUpdate }: UpdateApiInvoicesInfosInfoIdPutRequest, opts?: OperationOpts): Observable<AjaxResponse<InvoiceInfoResponse>>
    updateApiInvoicesInfosInfoIdPut({ infoId, invoiceInfoUpdate }: UpdateApiInvoicesInfosInfoIdPutRequest, opts?: OperationOpts): Observable<InvoiceInfoResponse | AjaxResponse<InvoiceInfoResponse>> {
        throwIfNullOrUndefined(infoId, 'infoId', 'updateApiInvoicesInfosInfoIdPut');
        throwIfNullOrUndefined(invoiceInfoUpdate, 'invoiceInfoUpdate', 'updateApiInvoicesInfosInfoIdPut');

        const headers: HttpHeaders = {
            'Content-Type': 'application/json',
        };

        return this.request<InvoiceInfoResponse>({
            url: '/api/invoices_infos/{info_id}'.replace('{info_id}', encodeURI(infoId)),
            method: 'PUT',
            headers,
            body: invoiceInfoUpdate,
        }, opts?.responseOpts);
    };

}
