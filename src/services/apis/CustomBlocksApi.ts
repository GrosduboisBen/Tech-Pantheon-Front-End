// tslint:disable
/**
 * Project Manager ( Portfolio )
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Observable } from 'rxjs';
import type { AjaxResponse } from 'rxjs/ajax';
import { BaseAPI, throwIfNullOrUndefined, encodeURI } from '../runtime';
import type { OperationOpts, HttpHeaders } from '../runtime';
import type {
    CustomBlockCreate,
    CustomBlockResponse,
    CustomBlockUpdate,
    HTTPValidationError,
} from '../models';

export interface CreateApiCustomBlocksPostRequest {
    customBlockCreate: CustomBlockCreate;
}

export interface DeleteApiCustomBlocksBlockIdDeleteRequest {
    blockId: string;
}

export interface ReadApiCustomBlocksBlockIdGetRequest {
    blockId: string;
}

export interface UpdateApiCustomBlocksBlockIdPutRequest {
    blockId: string;
    customBlockUpdate: CustomBlockUpdate;
}

/**
 * no description
 */
export class CustomBlocksApi extends BaseAPI {

    /**
     * Create a new custom block.
     * Create
     */
    createApiCustomBlocksPost({ customBlockCreate }: CreateApiCustomBlocksPostRequest): Observable<CustomBlockResponse>
    createApiCustomBlocksPost({ customBlockCreate }: CreateApiCustomBlocksPostRequest, opts?: OperationOpts): Observable<AjaxResponse<CustomBlockResponse>>
    createApiCustomBlocksPost({ customBlockCreate }: CreateApiCustomBlocksPostRequest, opts?: OperationOpts): Observable<CustomBlockResponse | AjaxResponse<CustomBlockResponse>> {
        throwIfNullOrUndefined(customBlockCreate, 'customBlockCreate', 'createApiCustomBlocksPost');

        const headers: HttpHeaders = {
            'Content-Type': 'application/json',
        };

        return this.request<CustomBlockResponse>({
            url: '/api/custom_blocks/',
            method: 'POST',
            headers,
            body: customBlockCreate,
        }, opts?.responseOpts);
    };

    /**
     * Delete a custom block by ID.
     * Delete
     */
    deleteApiCustomBlocksBlockIdDelete({ blockId }: DeleteApiCustomBlocksBlockIdDeleteRequest): Observable<any>
    deleteApiCustomBlocksBlockIdDelete({ blockId }: DeleteApiCustomBlocksBlockIdDeleteRequest, opts?: OperationOpts): Observable<AjaxResponse<any>>
    deleteApiCustomBlocksBlockIdDelete({ blockId }: DeleteApiCustomBlocksBlockIdDeleteRequest, opts?: OperationOpts): Observable<any | AjaxResponse<any>> {
        throwIfNullOrUndefined(blockId, 'blockId', 'deleteApiCustomBlocksBlockIdDelete');

        return this.request<any>({
            url: '/api/custom_blocks/{block_id}'.replace('{block_id}', encodeURI(blockId)),
            method: 'DELETE',
        }, opts?.responseOpts);
    };

    /**
     * Retrieve a custom block by ID.
     * Read
     */
    readApiCustomBlocksBlockIdGet({ blockId }: ReadApiCustomBlocksBlockIdGetRequest): Observable<CustomBlockResponse>
    readApiCustomBlocksBlockIdGet({ blockId }: ReadApiCustomBlocksBlockIdGetRequest, opts?: OperationOpts): Observable<AjaxResponse<CustomBlockResponse>>
    readApiCustomBlocksBlockIdGet({ blockId }: ReadApiCustomBlocksBlockIdGetRequest, opts?: OperationOpts): Observable<CustomBlockResponse | AjaxResponse<CustomBlockResponse>> {
        throwIfNullOrUndefined(blockId, 'blockId', 'readApiCustomBlocksBlockIdGet');

        return this.request<CustomBlockResponse>({
            url: '/api/custom_blocks/{block_id}'.replace('{block_id}', encodeURI(blockId)),
            method: 'GET',
        }, opts?.responseOpts);
    };

    /**
     * Update a custom block by ID.
     * Update
     */
    updateApiCustomBlocksBlockIdPut({ blockId, customBlockUpdate }: UpdateApiCustomBlocksBlockIdPutRequest): Observable<CustomBlockResponse>
    updateApiCustomBlocksBlockIdPut({ blockId, customBlockUpdate }: UpdateApiCustomBlocksBlockIdPutRequest, opts?: OperationOpts): Observable<AjaxResponse<CustomBlockResponse>>
    updateApiCustomBlocksBlockIdPut({ blockId, customBlockUpdate }: UpdateApiCustomBlocksBlockIdPutRequest, opts?: OperationOpts): Observable<CustomBlockResponse | AjaxResponse<CustomBlockResponse>> {
        throwIfNullOrUndefined(blockId, 'blockId', 'updateApiCustomBlocksBlockIdPut');
        throwIfNullOrUndefined(customBlockUpdate, 'customBlockUpdate', 'updateApiCustomBlocksBlockIdPut');

        const headers: HttpHeaders = {
            'Content-Type': 'application/json',
        };

        return this.request<CustomBlockResponse>({
            url: '/api/custom_blocks/{block_id}'.replace('{block_id}', encodeURI(blockId)),
            method: 'PUT',
            headers,
            body: customBlockUpdate,
        }, opts?.responseOpts);
    };

}
