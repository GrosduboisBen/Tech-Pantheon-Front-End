/* tslint:disable */
/* eslint-disable */
/**
 * Project Manager ( Portfolio )
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  CustomBlockListResponse,
  HTTPValidationError,
  InvoiceHasCustomBlockCreate,
  InvoiceListResponse,
} from '../models/index';
import {
    CustomBlockListResponseFromJSON,
    CustomBlockListResponseToJSON,
    HTTPValidationErrorFromJSON,
    HTTPValidationErrorToJSON,
    InvoiceHasCustomBlockCreateFromJSON,
    InvoiceHasCustomBlockCreateToJSON,
    InvoiceListResponseFromJSON,
    InvoiceListResponseToJSON,
} from '../models/index';

export interface CreateApiInvoicesBlocksPostRequest {
    invoiceHasCustomBlockCreate: InvoiceHasCustomBlockCreate;
}

export interface DeleteApiInvoicesBlocksInvoiceIdCustomBlockIdDeleteRequest {
    invoiceId: string;
    customBlockId: string;
}

export interface GetCustomBlocksApiInvoicesBlocksInvoicesInvoiceIdCustomBlocksGetRequest {
    invoiceId: string;
}

export interface GetInvoicesApiInvoicesBlocksCustomBlocksCustomBlockIdInvoicesGetRequest {
    customBlockId: string;
}

/**
 * InvoicesBlocksApi - interface
 * 
 * @export
 * @interface InvoicesBlocksApiInterface
 */
export interface InvoicesBlocksApiInterface {
    /**
     * Create an association between an invoice and a custom block.
     * @summary Create
     * @param {InvoiceHasCustomBlockCreate} invoiceHasCustomBlockCreate 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InvoicesBlocksApiInterface
     */
    createApiInvoicesBlocksPostRaw(requestParameters: CreateApiInvoicesBlocksPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>>;

    /**
     * Create an association between an invoice and a custom block.
     * Create
     */
    createApiInvoicesBlocksPost(invoiceHasCustomBlockCreate: InvoiceHasCustomBlockCreate, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any>;

    /**
     * Delete an association between an invoice and a custom block.
     * @summary Delete
     * @param {string} invoiceId 
     * @param {string} customBlockId 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InvoicesBlocksApiInterface
     */
    deleteApiInvoicesBlocksInvoiceIdCustomBlockIdDeleteRaw(requestParameters: DeleteApiInvoicesBlocksInvoiceIdCustomBlockIdDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>>;

    /**
     * Delete an association between an invoice and a custom block.
     * Delete
     */
    deleteApiInvoicesBlocksInvoiceIdCustomBlockIdDelete(invoiceId: string, customBlockId: string, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any>;

    /**
     * Retrieve all custom blocks associated with a specific invoice.
     * @summary Get Custom Blocks
     * @param {string} invoiceId 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InvoicesBlocksApiInterface
     */
    getCustomBlocksApiInvoicesBlocksInvoicesInvoiceIdCustomBlocksGetRaw(requestParameters: GetCustomBlocksApiInvoicesBlocksInvoicesInvoiceIdCustomBlocksGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CustomBlockListResponse>>;

    /**
     * Retrieve all custom blocks associated with a specific invoice.
     * Get Custom Blocks
     */
    getCustomBlocksApiInvoicesBlocksInvoicesInvoiceIdCustomBlocksGet(invoiceId: string, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CustomBlockListResponse>;

    /**
     * Retrieve all invoices associated with a specific custom block.
     * @summary Get Invoices
     * @param {string} customBlockId 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InvoicesBlocksApiInterface
     */
    getInvoicesApiInvoicesBlocksCustomBlocksCustomBlockIdInvoicesGetRaw(requestParameters: GetInvoicesApiInvoicesBlocksCustomBlocksCustomBlockIdInvoicesGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<InvoiceListResponse>>;

    /**
     * Retrieve all invoices associated with a specific custom block.
     * Get Invoices
     */
    getInvoicesApiInvoicesBlocksCustomBlocksCustomBlockIdInvoicesGet(customBlockId: string, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<InvoiceListResponse>;

}

/**
 * 
 */
export class InvoicesBlocksApi extends runtime.BaseAPI implements InvoicesBlocksApiInterface {

    /**
     * Create an association between an invoice and a custom block.
     * Create
     */
    async createApiInvoicesBlocksPostRaw(requestParameters: CreateApiInvoicesBlocksPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>> {
        if (requestParameters['invoiceHasCustomBlockCreate'] == null) {
            throw new runtime.RequiredError(
                'invoiceHasCustomBlockCreate',
                'Required parameter "invoiceHasCustomBlockCreate" was null or undefined when calling createApiInvoicesBlocksPost().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/invoices_blocks/`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: InvoiceHasCustomBlockCreateToJSON(requestParameters['invoiceHasCustomBlockCreate']),
        }, initOverrides);

        if (this.isJsonMime(response.headers.get('content-type'))) {
            return new runtime.JSONApiResponse<any>(response);
        } else {
            return new runtime.TextApiResponse(response) as any;
        }
    }

    /**
     * Create an association between an invoice and a custom block.
     * Create
     */
    async createApiInvoicesBlocksPost(invoiceHasCustomBlockCreate: InvoiceHasCustomBlockCreate, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any> {
        const response = await this.createApiInvoicesBlocksPostRaw({ invoiceHasCustomBlockCreate: invoiceHasCustomBlockCreate }, initOverrides);
        return await response.value();
    }

    /**
     * Delete an association between an invoice and a custom block.
     * Delete
     */
    async deleteApiInvoicesBlocksInvoiceIdCustomBlockIdDeleteRaw(requestParameters: DeleteApiInvoicesBlocksInvoiceIdCustomBlockIdDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>> {
        if (requestParameters['invoiceId'] == null) {
            throw new runtime.RequiredError(
                'invoiceId',
                'Required parameter "invoiceId" was null or undefined when calling deleteApiInvoicesBlocksInvoiceIdCustomBlockIdDelete().'
            );
        }

        if (requestParameters['customBlockId'] == null) {
            throw new runtime.RequiredError(
                'customBlockId',
                'Required parameter "customBlockId" was null or undefined when calling deleteApiInvoicesBlocksInvoiceIdCustomBlockIdDelete().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/invoices_blocks/{invoice_id}/{custom_block_id}`.replace(`{${"invoice_id"}}`, encodeURIComponent(String(requestParameters['invoiceId']))).replace(`{${"custom_block_id"}}`, encodeURIComponent(String(requestParameters['customBlockId']))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        if (this.isJsonMime(response.headers.get('content-type'))) {
            return new runtime.JSONApiResponse<any>(response);
        } else {
            return new runtime.TextApiResponse(response) as any;
        }
    }

    /**
     * Delete an association between an invoice and a custom block.
     * Delete
     */
    async deleteApiInvoicesBlocksInvoiceIdCustomBlockIdDelete(invoiceId: string, customBlockId: string, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any> {
        const response = await this.deleteApiInvoicesBlocksInvoiceIdCustomBlockIdDeleteRaw({ invoiceId: invoiceId, customBlockId: customBlockId }, initOverrides);
        return await response.value();
    }

    /**
     * Retrieve all custom blocks associated with a specific invoice.
     * Get Custom Blocks
     */
    async getCustomBlocksApiInvoicesBlocksInvoicesInvoiceIdCustomBlocksGetRaw(requestParameters: GetCustomBlocksApiInvoicesBlocksInvoicesInvoiceIdCustomBlocksGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CustomBlockListResponse>> {
        if (requestParameters['invoiceId'] == null) {
            throw new runtime.RequiredError(
                'invoiceId',
                'Required parameter "invoiceId" was null or undefined when calling getCustomBlocksApiInvoicesBlocksInvoicesInvoiceIdCustomBlocksGet().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/invoices_blocks/invoices/{invoice_id}/custom_blocks`.replace(`{${"invoice_id"}}`, encodeURIComponent(String(requestParameters['invoiceId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CustomBlockListResponseFromJSON(jsonValue));
    }

    /**
     * Retrieve all custom blocks associated with a specific invoice.
     * Get Custom Blocks
     */
    async getCustomBlocksApiInvoicesBlocksInvoicesInvoiceIdCustomBlocksGet(invoiceId: string, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CustomBlockListResponse> {
        const response = await this.getCustomBlocksApiInvoicesBlocksInvoicesInvoiceIdCustomBlocksGetRaw({ invoiceId: invoiceId }, initOverrides);
        return await response.value();
    }

    /**
     * Retrieve all invoices associated with a specific custom block.
     * Get Invoices
     */
    async getInvoicesApiInvoicesBlocksCustomBlocksCustomBlockIdInvoicesGetRaw(requestParameters: GetInvoicesApiInvoicesBlocksCustomBlocksCustomBlockIdInvoicesGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<InvoiceListResponse>> {
        if (requestParameters['customBlockId'] == null) {
            throw new runtime.RequiredError(
                'customBlockId',
                'Required parameter "customBlockId" was null or undefined when calling getInvoicesApiInvoicesBlocksCustomBlocksCustomBlockIdInvoicesGet().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/invoices_blocks/custom_blocks/{custom_block_id}/invoices`.replace(`{${"custom_block_id"}}`, encodeURIComponent(String(requestParameters['customBlockId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => InvoiceListResponseFromJSON(jsonValue));
    }

    /**
     * Retrieve all invoices associated with a specific custom block.
     * Get Invoices
     */
    async getInvoicesApiInvoicesBlocksCustomBlocksCustomBlockIdInvoicesGet(customBlockId: string, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<InvoiceListResponse> {
        const response = await this.getInvoicesApiInvoicesBlocksCustomBlocksCustomBlockIdInvoicesGetRaw({ customBlockId: customBlockId }, initOverrides);
        return await response.value();
    }

}
